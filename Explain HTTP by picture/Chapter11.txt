Chapter11：Web的攻击技术

11.1——针对Web的攻击技术
简单的HTTP协议本身并不存在安全性问题，因此协议本身几乎不会成为攻击对象。
应用HTTP协议的服务器和客户端，以及运行在服务器上的Web应用等资源才是攻击目标。

11.1.1——HTTP不具备必要的安全功能
几乎现今所有的Web网站都会使用会话（session）管理、加密处理等安全性方面的功能，而HTTP协议内并不具备这些功能。
从整体上来看，HTTP就是一个通用的单纯协议机制，因此它具备较多优势，但是在安全性方面则呈劣势。
因此，开发者需要自行设计并开发认证及会话管理功能来满足Web应用的安全。

11.1.2——在客户端即可篡改请求
在Web应用中，从浏览器那接收到的HTTP请求的全部内容，都可以在客户端自由地变更、篡改，所以Web应用可能会接收到与预期数据不相同的内容。
在HTTP请求报文内加载攻击代码，就能发起对Web应用的攻击。
通过URL查询字段或表单、HTTP首部、Cookie等途径把攻击代码传入，若这时Web应用存在安全漏洞，那内部信息就会遭到窃取，或被攻击者拿到管理权限。

11.1.3——针对Web应用的攻击模式
对Web应用的攻击模式有以下两种：
1.主动攻击
2.被动攻击
一：以服务器为目标的主动攻击
主动攻击（active attack）是指攻击者通过直接访问Web应用，把攻击代码传入的攻击模式。由于该模式是直接针对服务器上的资源进行攻击，因此攻击者需要能够访问到那些资源。
主动攻击模式里具有代表性的攻击是SQL注入攻击和OS命令注入攻击。
二：以服务器为目标的被动攻击
被动攻击（passive attack）是指利用圈套策略执行攻击代码的攻击模式，在被动攻击过程中，攻击者不直接对目标Web应用访问发起攻击。
被动攻击通常的攻击模式如下所示：
步骤一：攻击者诱使用户触发已设置好的陷阱，而陷阱会启动发送已嵌入攻击代码的HTTP请求。
步骤二：当用户不知不觉中招之后，用户的浏览器或邮件客户端就会触发这个陷阱。
步骤三：中招后的用户浏览器会把含有攻击代码的HTTP请求发送给作为攻击目标的Web应用，运行攻击代码。
步骤四：执行完攻击代码，存在安全漏洞的Web应用会成为攻击者的跳板，可能导致用户所持的Cookie等个人信息被窃取，登录状态中的用户权限遭恶意滥用等后果。
被动攻击模式中具有代表性的攻击是跨站脚本攻击和跨站点请求伪造。
利用被动攻击，可发起对原本从互联网上无法直接访问的企业内网等网络的攻击，只要用户踏入攻击者预先设好的陷阱，在用户能够访问到的网络范围内，即使是企业内网也同样会受到攻击。

11.2——因输出值转义不完全引发的安全漏洞
实施Web应用的安全对策可大致分为以下两部分：
1.客户端的验证
2.Web应用端（服务器端）的验证
（1）输入值验证
（2）输出值转义
多数情况下采用JavaScript在客户端 验证数据，可是在客户端允许篡改数据或关闭JavaScript，不适合将JavaScript验证作为安全的防范对策。
保留客户端验证只是为了尽早地辨识输入错误，起到提高UI体验的作用。
Web应用端的输入值验证按Web应用内的处理则有可能被误认为是具有攻击性意义的代码。输入值验证通常是指检查是否是符合系统业务逻辑的数值或检查字符编码等预防对策。
对数据库或文件系统、HTML、邮件等输出Web应用处理的数据之际，针对输出做值转义处理是一项至关重要的安全策略，当输出值转义不完全时，会因触发攻击者传入的攻击代码，而给输出对象带来损害。

11.2.1——跨站脚本攻击
跨站脚本攻击（Cross-Site Scripting，XSS）是指通过存在安全漏洞的Web网站注册用户的浏览器内运行非法的HTML标签或JavaScript进行的一种攻击。
动态创建的HTML部分有可能隐藏着安全漏洞，就这样，攻击者编写脚本设下陷阱，用户在自己的浏览器上运行时，一不小心就会受到被动攻击。
跨站脚本攻击有可能造成以下影响：
1.利用虚假输入表单骗取用户个人信息
2.利用脚本窃取用户的Cookie值，被害者在不知情的情况下，帮助攻击者发送恶意请求
3.显示伪造的文章或图片
详细例子见书P214

11.2.2——SQL注入攻击
一：会执行非法SQL的SQL注入攻击
SQL（SQL Injection）是指针对Web应用使用的数据库，通过运行非法的SQL而产生的攻击。该安全隐患有可能引发极大的威胁，有时会直接导致个人信息及机密信息的泄露。
Web应用通常都会用到数据库，当需要对数据库表内的数据进行检索或添加、删除等操作时，会使用SQL语句连接数据库进行特定的操作。
如果在调用SQL语句的方式上存在疏忽，就有可能执行被恶意注入（Injection）非法SQL语句。
SQL注入攻击有可能会造成以下等影响：
1.非法查看或篡改数据库内的内容
2.规避认证
3.执行和数据库服务器业务关联的程序等
详细例子见书P219
