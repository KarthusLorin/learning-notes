Chapter8：确认访问用户身份的认证

8.1——何为认证
计算机本身无法判断坐在显示器前的使用者的身份，，所以，需要核对“登陆者本人才知道的信息”、“登陆者本人才会有的信息”。
核对的信息通畅是以下几个：
1.密码：只有本人才会知道的字符串信息
2.动态令牌：仅限本人持有的设备内显示的一次性密码
3.数字证书：仅限本人（终端）持有的信息
4.生物认证：指纹和虹膜等本人的生理信息
5.IC卡等：仅限本人持有的信息
但是，即使是假冒用户，只要能通过用户验证，那么计算机就会默认是出自本人的行为。
HTTP使用的认证方式如下：
1.BASIC认证（基本认证）
2.DIGEST（摘要认证）
3.SSL客户端认证
4.FromBase认证（基于表单认证）

8.2——BASIC认证（不常用）
BASIC认证（基本认证）是从HTTP/1.0就定义的认证方式，现在仍有一部分的网站会使用这种认证方式，是Web服务器与通信客户端之间进行的认证方式。
具体认证过程看书。。。。。。。。
BASIC认证虽然采用Base64编码，但这不是加密处理，不需要任何附加信息即可对其解码。
换言之，由于明文解码后就是用户ID和密码，在HTTP等非加密通信的线路上进行BASIC认证的过程中，如果被人窃听，被盗的可能性很大。
BASIC认证使用上不够便捷灵活，且达不到多数Web网站期望的安全性，所以不常用。

8.3——DIGEST认证
为了弥补DIGEST认证存在的弱点，从HTTP/1.1起就有了DIGEST认证。
DIGEST认证童谣采用质询/响应的方式（challenge/response），但不会像BASIC认证那样直接发送明文密码。
所谓的质询/响应方式是指，一开始一方会发送认证要求给另一方，接着使用从另一方那接收到的质询吗计算生成响应码，最后将响应码返回给对方进行认证的方式。
因为发送给对方的只是响应摘要及质询码产生的计算结果，所以，比起BASIC认证，密码泄露的可能性就降低了。

8.4——客户端认证
从使用用户ID和密码的认证方式方面来讲，只要二者的内容正确，即可认证是本人的行为。但如果用户ID和密码被盗，就很有可能被第三者冒充，利用SSL客户端认证则可以避免该情况的发生。
SSL客户端认证是指借由HTTPS的客户端证书完成认证的方式，凭借客户端证书认证，服务器可确认访问是否来自已登录的客户端。

8.4.1——SSL客户端认证的认证步骤
为达到SSL客户端认证的目的，需要事先将客户端证书分发给客户端，且客户端必须安装此证书。
步骤：
1.接收到需要认证资源的请求，服务器会发送Certificate Request报文，要求客户端提供客户端证书。
2.用户选择将发送的客户端证书后，客户端会把客户端证书信息以Client Certificate报文方式发送给服务器。
3.服务器验证客户端证书验证通过后方可领取证书内客户端的公开密钥，然后开始HTTPS加密通信。

8.4.2——SSL客户端认证采用双因素认证
在多数情况下，SSL客户端认证不会仅依靠证书完成认证，一般会基于表单认证组合形成一种双因素认证（Two-factorauthentication）来使用。
所谓双因素认证是指，认证过程不仅需要密码这一个因素，还需要申请认证者提供其他持有信息，从而作为另一个因素，与其结合使用的认证方式。

8.5——基于表单认证
基于表单的认证方法并不是在HTTP协议中定义的，客户端会向服务器上的Web应用程序发送登录信息（Credential），按登录信息的验证结果认证。
多数情况下，输入已事先登录的用户ID（通常是任意字符串或邮件地址）和登录信息后，发送给Web应用程序，基于认证结果来决定认证是否成功。

8.5.1——认证多半为基于表单认证
由于使用上的便利性及安全性问题，HTTP协议标准提供的BASIC认证和DIGEST认证几乎不怎么使用，另外，SSL客户端认证虽然具有高度的安全等级，但因为导入及维持费用等问题，还尚未普及。

8.5.2——Session管理及Cookie应用
基于表单认证的标准规范尚未有定论，一般会使用Cookie来管理Session（会话）。
基于表单认证本身是通过服务器端的Web应用，将客户端发送过来的用户ID和密码与之前登陆过的信息做匹配来进行认证的。
但鉴于HTTP是无状态协议，之前已认证成功的用户状态无法通过协议层面保存下来。于是，我们会使用Cookie来管理Session，以弥补HTTP协议中不存在的状态管理功能。
